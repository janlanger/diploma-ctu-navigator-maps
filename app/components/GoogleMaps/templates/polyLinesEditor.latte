<a href="#" class="btn btn-active" id="switcher-add" title="Umístění bodů"><i class="icon-pencil"></i></a>
<a href="#" class="btn " id="switcher-move" title="Úprava sítě"><i class="icon-move"></i></a>
<div id="tip-line"></div>

<div id="map_canvas" style="width: {$mapWidth}; height: {$mapHeight}; margin: auto"></div>
<div id="lines-list"></div>
<script type="text/javascript">
    var EDITOR_ADD = 0;
    var EDITOR_MOVE = 1;

    var editorState = EDITOR_ADD;

    var STATE_ACTIVE = 0
    var STATE_INCACTIVE = 1
    var map
    var markers = []
    var lines = []
    var activePL
    var additionState = STATE_INCACTIVE


    var polyOptions = {
        strokeColor:'#FF0000',
        strokeOpacity:0.8,
        strokeWeight:2
    }

    function initialize() {
        var mapOptions = {
        {if $zoomLevel != null}
            zoom: {$zoomLevel},
            {else}
            zoom:8,
        {/if}
        {if !empty($center)}
            center:new google.maps.LatLng({$center['lat']},{$center['long']}),
            {else}
            center:new google.maps.LatLng("50.076091", "14.436035"), // prague
        {/if}
            mapTypeId:google.maps.MapTypeId.ROADMAP,
            disableDoubleClickZoom:true

        }
        map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

    {if !empty($points)}
        {foreach $points as $point}
            addMarker(new google.maps.LatLng({$point['lat']}, {$point['long']}), false)
        {/foreach}
    {/if}
        //create polylines


        google.maps.event.addListener(map, 'click', mapClick);
        google.maps.event.addListener(map, 'rightclick', mapRightClick);
    }

    function mapClick(event) {
        if (editorState == EDITOR_ADD) {
            if (additionState == STATE_ACTIVE) {
                finishPolyline(event.latLng)
                createPolyLine(event.latLng)
                addMarker(event.latLng, false)
            }
            if (additionState == STATE_INCACTIVE) {
                createPolyLine(event.latLng)
                addMarker(event.latLng, false)
                additionState = STATE_ACTIVE
            }
        }
    }

    function mapRightClick(event) {
        if (editorState == EDITOR_ADD) {
            if (additionState == STATE_ACTIVE) {
                activePL = null
                lines.pop()
                additionState = STATE_INCACTIVE
            }
        }
    }

    function markerClick(event) {
        if (editorState == EDITOR_ADD) {
            if (additionState == STATE_ACTIVE) {
                finishPolyline(event.latLng)
                createPolyLine(event.latLng)
            }
            if (additionState == STATE_INCACTIVE) {
                createPolyLine(event.latLng)
                additionState = STATE_ACTIVE
            }
        }
    }

    function markerRightClick(event) {

    }
    var movedMarker = []
    var moveStart = null
    function markerDragStart(event) {

        if(editorState == EDITOR_MOVE) {
            position = this.position;
            moveStart = position;
            for (var i = 0; i < lines.length; i++) {
                path = lines[i].getPath();
                if (path.getAt(0) == position) {
                    movedMarker[i] = lines[i]
                }
                if (path.getAt(1) == position) {
                    movedMarker[i] = lines[i]
                }
            }
        }
    }

    function markerDragEnd(event) {
        if(editorState == EDITOR_MOVE) {
            newPosition = this.position;
            for(var i=0; i<movedMarker.length; i++) {
                if (movedMarker[i] == undefined) continue;

                line = lines[i]
                if(line.getPath().getAt(0) == moveStart) {
                    line.getPath().setAt(0, newPosition)
                }
                if(line.getPath().getAt(1) == moveStart) {
                    line.getPath().setAt(1, newPosition)
                }
            }
        }
        movedMarker = [];
    }

    function createPolyLine(startPosition) {
        activePL = new google.maps.Polyline(polyOptions);
        activePL.setMap(map);
        activePL.getPath().push(startPosition)
    }

    function finishPolyline(endPosition) {
        if(activePL != undefined) {
            if(activePL.getPath().getAt(0) != endPosition) {
                activePL.getPath().push(endPosition)
                lines.push(activePL)
                updateList(activePL)
            }
        }
        activePL = null;
    }

    function addMarker(position, draggable) {
        var x = new google.maps.Marker({
            map:map,
            draggable:draggable,
            position:position,
            icon:'/images/red_dot.png'
        })
        google.maps.event.addListener(x, 'click', markerClick)
        google.maps.event.addListener(x, 'rightclick', markerRightClick)
        google.maps.event.addListener(x, 'dragstart', markerDragStart)
        google.maps.event.addListener(x, 'dragend',markerDragEnd)
        markers.push(x)
        return x
    }


    function loadScript() {
        var script = document.createElement("script");
        script.type = "text/javascript";
        script.src = "http://maps.googleapis.com/maps/api/js?key="+{$apiKey}+
        "&sensor=false&callback=initialize";
        document.body.appendChild(script);
        changeState(EDITOR_ADD)
    }

    window.onload = loadScript;

    $(document).ready(function () {
        $("#switcher-add").click(function () {
            changeState(EDITOR_ADD)
        });
        $("#switcher-move").click(function () {
            changeState(EDITOR_MOVE)
        })
    });

    function changeState(newState) {
        editorState = newState
        additionState = STATE_INCACTIVE
        draggable = true;
        if (newState == EDITOR_ADD) {
            $("#switcher-move").removeClass("btn-info");
            $("#switcher-add").addClass("btn-info");
            //disable marker draggablity
            draggable = false;
            $("#tip-line").html("<b>Přidávání bodů</b>: levým kliknutím přidáváte body, jsou automaticky spojeny s předchozím. Pravým kliknutím přerušíte řadu bodů.");
        }
        if (newState == EDITOR_MOVE) {
            $("#switcher-add").removeClass("btn-info");
            $("#switcher-move").addClass("btn-info");
            $("#tip-line").html("<b>Úprava bodů</b>: Tažením můžete upravit pozici bodů na mapě. Připojené cesty se upraví automaticky.");
        }

        for(var i=0; i<markers.length; i++) {
            markers[i].setDraggable(draggable);
        }
    }


    function updateList(line) {
        var div = document.createElement("div")
        path = line.getPath()
        div.innerText = path.getAt(0)+"; "+path.getAt(1);
        $("#lines-list").append(div)
    }


</script>
