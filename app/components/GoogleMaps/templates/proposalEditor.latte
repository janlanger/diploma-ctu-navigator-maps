<div class="pull-right">
    {form revisionChanger, class=>"form-inline"}
        {label against}<b>Pracovat proti revizi: </b>{/label}{input against, class=>'input-mini', 'id'=>"revision-changer"}
    {/form}
</div>
{control mapEditor, size=>[$mapWidth, $mapHeight]}

<script type="text/javascript" src="{$baseUri}/js/typescript/proposalEditor.js"></script>
<script type="text/javascript">


    var proposals = {};

    {foreach $proposals as $proposal}
        proposals.proposal{$proposal->id} = {
            author: {$proposal->submittedBy->name},
            date: {$proposal->submittedDate|date:"d.m.Y H:i"},
            comment: {$proposal->comment},
            specification: {
                nodes: [
                    {foreach $proposal->nodes as $node}
                    {
                        deleted: {$node->wasDeleted}
                        {if $node->original != null}
                            ,original: {$node->original->toArray()}
                        {/if}
                        {if $node->properties != null}
                            ,properties: {=array_merge($node->properties->toArray(),["propertyId"=>$node->properties->id])}
                        {/if}
                    }{sep},{/sep}
                    {/foreach}
                ],
                paths: [
                    {foreach $proposal->paths as $path}
                    {
                        deleted:{$path->wasDeleted}
                        {if $path->original != null}
                        , original: {$path->original->toArray()}
                        {/if}
                        {if $path->properties != null}
                        , properties: {=array_merge($path->properties->toArray(),["propertyId"=>$path->properties->id])}
                        {/if}
                    }{sep},{/sep}
                    {/foreach}
                ]
            }
        };
    {/foreach}

    editorOptions.proposals = proposals;
    editorOptions.points = points;
    editorOptions.paths = paths;
    editorOptions.collisions = {$collisions};


    var editor = new Mapping.ProposalEditor(document.getElementById('map_canvas'), editorOptions);

    $(document).ready(function() {
        $("#revision-changer").change(function(event) {
            var value = $(this).val();
            $(this).parent("form").ajaxSubmit(function(responseText, statusText, xhr) {
                var newPoints = [];
                var newPaths = [];
                if(responseText.nodes != undefined) {

                    for(var i=0; i<responseText.nodes.length; i++) {
                        var item = responseText.nodes[i];
                        if(!item) continue;
                        var pointInfo = {};
                        pointInfo.appOptions = $.extend({}, item);

                        var p = item.position.split(",");
                        pointInfo.position = {
                            lat: p[0],
                            lng: p[1]
                        };
                        pointInfo.icon = mapping.getMarkerIcon(item.type);
                        pointInfo.draggable = true;
                        pointInfo.title = item.title;

                        newPoints.push(pointInfo);
                    }
                }

                if (responseText.paths != undefined) {

                    for (var i = 0; i < responseText.paths.length; i++) {
                        var item = responseText.paths[i];
                        if (!item) continue;
                        var pathInfo = {
                            start: { lat: item.start[0], lng: item.start[1]},
                            end: { lat: item.end[0], lng: item.end[1]}
                        };

                        newPaths.push(pathInfo);
                    }
                }
                mapping.setNewData(newPoints, newPaths, value);
            });
        });
    });
</script>
<h4>Návrhy</h4>
<div class="alert alert-info">
    <button type="button" class="close" data-dismiss="alert">&times;</button>
    Aplikace návrhů při zpracování probíhá v pořadí podle času zaslání návrhu, <strong>od nejstarších po nejnovější</strong>. Pokud provedete nějaké změny přímo v zde, <strong>aplikují se jako poslední</strong>.
</div>
{form proposalForm}
<table class="table table-hover table-striped">
    <tr>
        <th>&nbsp;</th>
        <th><img src="{$baseUri}/images/icons/Check_16x16.png" title="Zařadit do revize"></th>
        <th><img src="{$baseUri}/images/icons/Delete_16x16.png" title="Zamítnout"></th>
        <th>Zadáno</th>
        <th>Vytvořil</th>
        <th>Váš komentář</th>
        <th>&nbsp;</th>
    </tr>
    <tr n:if="empty($proposals)">
        <td colspan="7" style="text-align: center">Neexistují žádné otevřené návrhy. Můžete ale upravit data přímo v mapě a vytvořit tím novou revizi.</td>
    </tr>
{foreach $proposals as $proposal}
    <tr id="proposal{$proposal->id}">
        <td>#{$proposal->id}</td>
        <td>{input proposal$proposal->id:approve, class=>'approve'}</td>
        <td>{input proposal$proposal->id:reject, class=>'reject'}</td>
        <td>{$proposal->submittedDate|date:"d.m.Y H:i"}</td>
        <td>{$proposal->submittedBy->name}</td>
        <td>{input proposaltext$proposal->id}</td>
        <td><a href="#">Detail návrhu</a></td>
    </tr>
{/foreach}
</table>
    {input custom_changes, style=> 'width:100%;height:200px', class=>'hide', id=>'custom_changes'}
    {input revision, id=>'revision-field'}
    {input send, id => 'proposal-send'}
{/form}
<div id="modalTemplate" class="modal hide fade" tabindex="-1" aria-labelledby="modal-header" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="modal-header"></h3>
    </div>
    <div class="modal-body" id="modal-content">
        <p>One fine body…</p>
    </div>

</div>

