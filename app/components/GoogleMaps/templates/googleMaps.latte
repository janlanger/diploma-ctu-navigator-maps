<div id="map_canvas" style="width: {$mapWidth}; height: {$mapHeight}; margin: auto"></div>

<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key={$apiKey}&sensor=false"></script>
<script type="text/javascript" src="{$baseUri}/js/typescript/gmaps.js"></script>
<script type="text/javascript">

    var points = [];

    {foreach $points as $point}
        points.push({ position: { lat:{$point['lat']}, lng: {$point['long']}}});
    {/foreach}

    var customLayers = [];
    {foreach $customLayers as $title => $path}
    customLayers[{$title}] = {$path};
    {/foreach}


    var mapping = new Mapping.BasicMap(document.getElementById('map_canvas'), {
        zoom: {$zoomLevel},
        center: {
            lat: {$center['lat']},
            lng: {$center['long']}
        },
        customLayers: customLayers,
        points: points
    });

    {*


     }
     {if $geodecoder}
     // geodecoder state - only one marker can be added to the map and it is draggable and has callbacks to form fields

     $("#gps-search").click(function() {
         var address = $("#"+{$geodecoderAddress->control->id}).val()
         var geocoder = new google.maps.Geocoder();
         geocoder.geocode(
                 { 'address':address,'region':'cz' }, function(results, status) {
                     if(status == google.maps.GeocoderStatus.OK) {
                         map.setCenter(results[0].geometry.location);
                         map.setZoom(16);
                         setMarkerPosition(results[0].geometry.location)
                     } else {
                         alert(status)
                     }
                 })
     })
     var marker
     function setMarkerPosition(position) {
         if (marker == undefined) {
             marker = addMarker(position, true)

             google.maps.event.addListener(marker, 'dragend', function(event) {
                 updateGPSField(this.position);
             })
         } else{
             marker.setPosition(position)
         }
         updateGPSField(position)
     }
     function updateGPSField(position) {
         $("#"+{$geodecoderGPS->control->id}).val(position.lat()+","+position.lng())
     }
     //geodecoder ends
     {/if}
     function addMarker(position, draggable) {
         var x =new google.maps.Marker({
             map: map,
             draggable: draggable,
             position: position
         })
         markers.push = x
         return x
     }*}

</script>

